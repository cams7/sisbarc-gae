package br.com.cams7.sisbarc.aal.ws;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import br.com.cams7.app.domain.entity.UserEntity;
import br.com.cams7.gae.security.AuthenticationHelper;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.8 Generated source
 * version: 2.2
 * 
 */
@WebServiceClient(name = AppArduinoServiceImpl.WEBSERVICE_NAME, targetNamespace = AppArduinoServiceImpl.WEBSERVICE_TARGETNAMESPACE, wsdlLocation = AppArduinoServiceImpl.WEBSERVICE_WSDLLOCATION)
public class AppArduinoServiceImpl extends Service {

	public static final String CONTROLLER_NAME = "AppArduinoWSController";

	public static final String WEBSERVICE_NAME = CONTROLLER_NAME + "Service";
	public static final String WEBSERVICE_TARGETNAMESPACE = "http://ws.controller.aal.sisbarc.cams7.com.br/";

	public static final String WEBSERVICE_WSDLLOCATION = "http://localhost:8080/acende_apaga_leds/arduino?wsdl";
	private final String WEBSERVICE_PORT = CONTROLLER_NAME + "Port";

	private final static QName WEBSERVICE_QNAME = new QName(
			AppArduinoServiceImpl.WEBSERVICE_TARGETNAMESPACE,
			AppArduinoServiceImpl.WEBSERVICE_NAME);

	public AppArduinoServiceImpl(URL wsdlLocation) {
		super(wsdlLocation, WEBSERVICE_QNAME);
	}

	public AppArduinoServiceImpl(URL wsdlLocation,
			WebServiceFeature... features) {
		super(wsdlLocation, WEBSERVICE_QNAME, features);
	}

	public AppArduinoServiceImpl(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public AppArduinoServiceImpl(URL wsdlLocation, QName serviceName,
			WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns AppArduinoService
	 */
	// AppArduinoServiceImplPort
	@WebEndpoint(name = WEBSERVICE_PORT)
	public AppArduinoService getAppArduinoServicePort() {
		AppArduinoService service = super.getPort(new QName(
				AppArduinoServiceImpl.WEBSERVICE_TARGETNAMESPACE,
				WEBSERVICE_PORT), AppArduinoService.class);
		return service;
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns AppArduinoService
	 */
	@WebEndpoint(name = WEBSERVICE_PORT)
	public AppArduinoService getAppArduinoServicePort(
			WebServiceFeature... features) {
		AppArduinoService service = super.getPort(new QName(
				AppArduinoServiceImpl.WEBSERVICE_TARGETNAMESPACE,
				WEBSERVICE_PORT), AppArduinoService.class, features);
		return service;
	}

	public static final URL getWsdlLocation() {
		UserEntity currentUser = AuthenticationHelper.getCurrentUser();
		final String ADDRESS = currentUser.getAddress()
				+ "/acende_apaga_leds/arduino?wsdl";
		try {
			return new URL(ADDRESS);
		} catch (MalformedURLException e) {
			throw new WebServiceException(e);
		}
	}

}
