<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 	http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context	http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/security	http://www.springframework.org/schema/security/spring-security.xsd">


	<!-- http://docs.spring.io/spring-security/site/docs/3.0.x/reference/el-access.html -->
	<!-- hasRole([role]) = Returns true if the current principal has the specified 
		role. -->
	<!-- hasAnyRole([role1,role2]) = Returns true if the current principal has 
		any of the supplied roles (given as a comma-separated list of strings) -->
	<!-- principal = Allows direct access to the principal object representing 
		the current user -->
	<!-- authentication = Allows direct access to the current Authentication 
		object obtained from the SecurityContext -->
	<!-- permitAll = Always evaluates to true -->
	<!-- denyAll = Always evaluates to false -->
	<!-- isAnonymous() = Returns true if the current principal is an anonymous 
		user -->
	<!-- isRememberMe() = Returns true if the current principal is a remember-me 
		user -->
	<!-- isAuthenticated() = Returns true if the user is not anonymous -->
	<!-- isFullyAuthenticated() = Returns true if the user is not an anonymous 
		or a remember-me user -->

	<http pattern="/favicon.ico" security="none" />
	<http pattern="/resources" security="none" />

	<http pattern="/error" security="none" />

	<http pattern="/_ah/login" security="none" />
	<http pattern="/logout" security="none" />
	<http pattern="/403" security="none" />
	<http pattern="/disabled" security="none" />

	<!-- enable use-expressions -->
	<http use-expressions="true" entry-point-ref="gaeEntryPoint">
		<intercept-url pattern="/cadastrarLogin" access="hasRole('ROLE_NEWUSER')" />

		<intercept-url pattern="/home" access="permitAll" />
		<intercept-url pattern="/sobre" access="permitAll" />

		<intercept-url pattern="/mercadoria**"
			access="hasAnyRole('ROLE_USER,ROLE_ADMIN')" />
		<intercept-url pattern="/listarMercadorias"
			access="hasAnyRole('ROLE_USER,ROLE_ADMIN')" />
		<intercept-url pattern="/incluirMercadoria"
			access="hasAnyRole('ROLE_USER,ROLE_ADMIN')" />
		<intercept-url pattern="/editarMercadoria"
			access="hasAnyRole('ROLE_USER,ROLE_ADMIN')" />

		<intercept-url pattern="/usuario**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/listarUsuarios" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/incluirUsuario" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/editarUsuario" access="hasRole('ROLE_ADMIN')" />

		<custom-filter position="PRE_AUTH_FILTER" ref="gaeFilter" />

		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
	</http>

	<beans:bean id="gaeEntryPoint"
		class="br.com.cams7.gae.security.GoogleAccountsAuthenticationEntryPoint" />

	<beans:bean id="gaeFilter"
		class="br.com.cams7.gae.security.AuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="failureHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
				<beans:property name="exceptionMappings">
					<beans:map>
						<beans:entry
							key="org.springframework.security.authentication.DisabledException"
							value="/disabled" />
					</beans:map>
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="gaeAuthenticationProvider" />
	</authentication-manager>

	<context:component-scan base-package="br.com.cams7.gae.repository.impl" />
	<context:component-scan base-package="br.com.cams7.gae.service.impl" />

	<beans:bean id="gaeAuthenticationProvider"
		class="br.com.cams7.gae.security.GoogleAccountsAuthenticationProvider">
		<beans:property name="service" ref="userService" />
	</beans:bean>
</beans:beans>